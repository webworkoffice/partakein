#summary How to build and run PARTAKE.

= Introduction =

This page describes how to build PARTAKE on eclipse and run on Tomcat 6.

= Details =

We use eclipse 3.6 (Java EE platform) with [http://www.eclipse.org/m2e/ m2eclipse] plugin.

  # checkout PARTAKE from http://code.google.com/p/partakein/source/checkout 
  # On eclipse, select File -> New -> Dynamic Web Project. Set Project name as you like (we recommend to use "Partake"), and set Project location where you saved the file, and press Next >.
    * set Target runtime to Apache Tomcat v6.0
    * set Dynamic web module version to 2.5
  # Now we are on "build path" page, set the following configurations, and press Next >.
    * set "Source folders on build path" as "src/main/java", "src/main/resources", "src/test/java", and "src/test/resources". 
    * set "Default output folder:" to "target/classes". 
    * NOTE: The following picture may contain src/main/resource and  src/test/resource, but *src/main/resources* and *src/test/resources* are correct.
http://bts.partake.in/buildpath.png
  # set Context root as "/", and set "Content directory" as "src/main/webapp", then press Finish. http://bts.partake.in/webmodule.png
  # If you are using Windows, do not forget to set project encoding to utf-8.
  # right click on Partake project, and choose Maven -> enable project management.
  # right click on Partake project, and choose Maven -> update project configuration. This may take a minute.
  # The previous step may change your build path automatically. Check the build path again.
    * src/main/java, src/main/resources, src/test/java, and src/test/resources should be included. NOTE: *src/main/resources* and *src/test/resources* are correct. http://bts.partake.in/buildpath2.png
    * In "Order and Export" pane, Maven dependencies and Web App Libraries should be checked. http://bts.partake.in/orderandexport.png
  # *On Markers pane, you may see Classpath Dependency Validator Message.*
     * *In this case, right click it and select Quick fix, and press Finish. This will fix the problem.*
     * This is important. If you forget to do this, you will see ClassNotFoundException.
  # Then choose Run on Server.

Since you have not configure PARTAKE, you will see an error message.

  # Download Apache Cassandra (0.6.5) and run on localhost. Maybe you have to set up data and index directories.
    * Cassandra use 8080 for JMX by default. This conflicts with tomcat's default port. So the port described in cassandra's launching script (e.g. conf/cassandra.sh.in) should be changed. We recommend to use port 8081 or something like that for JMX.
    * configure conf/storage-conf.xml to use OrderPreservingPartitioner. Find the line containing {{{ <Partitioner>org.apache.cassandra.dht.RandomPartitioner</Partitioner> }}} and change it to {{{ <Partitioner>org.apache.cassandra.dht.OrderPreservingPartitioner</Partitioner> }}}.
  # fill src/main/resource/sample.partake.properties (especially bitly)
    * a partake.properties file has in.partake.mode property. The value of this property is called "mode".
    * partake will read {mode}.partake.properties.
  # rename src/main/resource/twitter4j.properties.sample as src/main/resource/twitter4j.properties.
    * set your project name consumer key and consumer secret given from twitter.

Then PARTAKE should run now. If you have any difficulties, please tell @partakein or @mayahjp.

Do not forget to register your application to the twitter.
    * http://twitter.com/apps/new
    * Application Type should be "Browser"
    * Callback URL is any valid URL. But do not use localhost.
    * Default Access Type should be "Read & Write".
    * Check "Yes, use Twitter for login"


== NOTE ==

When you failed eclipse operations, web.xml may be rewritten. In this case, please revert web.xml